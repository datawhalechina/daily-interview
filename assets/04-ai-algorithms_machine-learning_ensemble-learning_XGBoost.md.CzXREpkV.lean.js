import{_ as T,c as l,o as n,j as t,ag as e,a as Q}from"./chunks/framework.DT5BmYxR.js";const o="/daily-interview/images/image-20210921182812155.png",r1=JSON.parse('{"title":"XGBoost面试?","description":"","frontmatter":{},"headers":[],"relativePath":"04-ai-algorithms/machine-learning/ensemble-learning/XGBoost.md","filePath":"04-ai-algorithms/machine-learning/ensemble-learning/XGBoost.md"}'),r={name:"04-ai-algorithms/machine-learning/ensemble-learning/XGBoost.md"},i={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},s={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.452ex"},xmlns:"http://www.w3.org/2000/svg",width:"4.525ex",height:"2.149ex",role:"img",focusable:"false",viewBox:"0 -750 2000 950","aria-hidden":"true"},m={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},d={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.452ex"},xmlns:"http://www.w3.org/2000/svg",width:"14.817ex",height:"2.149ex",role:"img",focusable:"false",viewBox:"0 -750 6549 950","aria-hidden":"true"},f={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},p={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.452ex"},xmlns:"http://www.w3.org/2000/svg",width:"32.916ex",height:"2.149ex",role:"img",focusable:"false",viewBox:"0 -750 14549 950","aria-hidden":"true"},x={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},g={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.452ex"},xmlns:"http://www.w3.org/2000/svg",width:"28.391ex",height:"2.149ex",role:"img",focusable:"false",viewBox:"0 -750 12549 950","aria-hidden":"true"},h={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},u={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.452ex"},xmlns:"http://www.w3.org/2000/svg",width:"60.066ex",height:"2.149ex",role:"img",focusable:"false",viewBox:"0 -750 26549 950","aria-hidden":"true"},w={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},v={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.452ex"},xmlns:"http://www.w3.org/2000/svg",width:"26.129ex",height:"2.149ex",role:"img",focusable:"false",viewBox:"0 -750 11549 950","aria-hidden":"true"},c={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},y={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.452ex"},xmlns:"http://www.w3.org/2000/svg",width:"21.604ex",height:"2.149ex",role:"img",focusable:"false",viewBox:"0 -750 9549 950","aria-hidden":"true"},H={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},k={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.05ex"},xmlns:"http://www.w3.org/2000/svg",width:"8.029ex",height:"1.645ex",role:"img",focusable:"false",viewBox:"0 -705 3549 727","aria-hidden":"true"},M={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},L={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.048ex"},xmlns:"http://www.w3.org/2000/svg",width:"3.258ex",height:"1.593ex",role:"img",focusable:"false",viewBox:"0 -683 1440 704","aria-hidden":"true"},b={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},_={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.05ex"},xmlns:"http://www.w3.org/2000/svg",width:"6.962ex",height:"1.645ex",role:"img",focusable:"false",viewBox:"0 -705 3077 727","aria-hidden":"true"},Z={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},D={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.048ex"},xmlns:"http://www.w3.org/2000/svg",width:"3.258ex",height:"1.593ex",role:"img",focusable:"false",viewBox:"0 -683 1440 704","aria-hidden":"true"},z={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},C={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.048ex"},xmlns:"http://www.w3.org/2000/svg",width:"3.258ex",height:"1.593ex",role:"img",focusable:"false",viewBox:"0 -683 1440 704","aria-hidden":"true"},V={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},S={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.339ex"},xmlns:"http://www.w3.org/2000/svg",width:"2.608ex",height:"1.342ex",role:"img",focusable:"false",viewBox:"0 -443 1152.6 593","aria-hidden":"true"},A={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},B={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.339ex"},xmlns:"http://www.w3.org/2000/svg",width:"2.608ex",height:"1.342ex",role:"img",focusable:"false",viewBox:"0 -443 1152.6 593","aria-hidden":"true"},G={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},j={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.05ex"},xmlns:"http://www.w3.org/2000/svg",width:"9.495ex",height:"1.645ex",role:"img",focusable:"false",viewBox:"0 -705 4197 727","aria-hidden":"true"},P={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},I={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"47.26ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 20889 1000","aria-hidden":"true"},R={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},X={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.464ex"},xmlns:"http://www.w3.org/2000/svg",width:"10.075ex",height:"2.059ex",role:"img",focusable:"false",viewBox:"0 -705 4453 910","aria-hidden":"true"},N={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},E={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"5.405ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 2389 1000","aria-hidden":"true"},J={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},q={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.05ex"},xmlns:"http://www.w3.org/2000/svg",width:"9.495ex",height:"1.645ex",role:"img",focusable:"false",viewBox:"0 -705 4197 727","aria-hidden":"true"},F={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},$={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.452ex"},xmlns:"http://www.w3.org/2000/svg",width:"25.894ex",height:"2.149ex",role:"img",focusable:"false",viewBox:"0 -750 11445 950","aria-hidden":"true"},O={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},U={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.452ex"},xmlns:"http://www.w3.org/2000/svg",width:"9.05ex",height:"2.149ex",role:"img",focusable:"false",viewBox:"0 -750 4000 950","aria-hidden":"true"},K={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},W={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"0"},xmlns:"http://www.w3.org/2000/svg",width:"3.74ex",height:"1.595ex",role:"img",focusable:"false",viewBox:"0 -705 1653 705","aria-hidden":"true"},Y={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},t2={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.452ex"},xmlns:"http://www.w3.org/2000/svg",width:"70.136ex",height:"2.149ex",role:"img",focusable:"false",viewBox:"0 -750 31000 950","aria-hidden":"true"},a2={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},Q2={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.452ex"},xmlns:"http://www.w3.org/2000/svg",width:"27.149ex",height:"2.149ex",role:"img",focusable:"false",viewBox:"0 -750 12000 950","aria-hidden":"true"},e2={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},l2={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.464ex"},xmlns:"http://www.w3.org/2000/svg",width:"23.649ex",height:"2.161ex",role:"img",focusable:"false",viewBox:"0 -750 10453 955","aria-hidden":"true"},n2={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},T2={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"0"},xmlns:"http://www.w3.org/2000/svg",width:"2.672ex",height:"1.545ex",role:"img",focusable:"false",viewBox:"0 -683 1181 683","aria-hidden":"true"},o2={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},r2={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.05ex"},xmlns:"http://www.w3.org/2000/svg",width:"9.495ex",height:"1.645ex",role:"img",focusable:"false",viewBox:"0 -705 4197 727","aria-hidden":"true"},i2={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},s2={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.05ex"},xmlns:"http://www.w3.org/2000/svg",width:"9.495ex",height:"1.645ex",role:"img",focusable:"false",viewBox:"0 -705 4197 727","aria-hidden":"true"},m2={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},d2={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.05ex"},xmlns:"http://www.w3.org/2000/svg",width:"9.495ex",height:"1.645ex",role:"img",focusable:"false",viewBox:"0 -705 4197 727","aria-hidden":"true"},f2={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},p2={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.452ex"},xmlns:"http://www.w3.org/2000/svg",width:"22.425ex",height:"2.149ex",role:"img",focusable:"false",viewBox:"0 -750 9912 950","aria-hidden":"true"},x2={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},g2={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.05ex"},xmlns:"http://www.w3.org/2000/svg",width:"9.495ex",height:"1.645ex",role:"img",focusable:"false",viewBox:"0 -705 4197 727","aria-hidden":"true"},h2={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},u2={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.05ex"},xmlns:"http://www.w3.org/2000/svg",width:"6.962ex",height:"1.645ex",role:"img",focusable:"false",viewBox:"0 -705 3077 727","aria-hidden":"true"},w2={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},v2={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.05ex"},xmlns:"http://www.w3.org/2000/svg",width:"9.495ex",height:"1.645ex",role:"img",focusable:"false",viewBox:"0 -705 4197 727","aria-hidden":"true"},c2={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},y2={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.05ex"},xmlns:"http://www.w3.org/2000/svg",width:"6.962ex",height:"1.645ex",role:"img",focusable:"false",viewBox:"0 -705 3077 727","aria-hidden":"true"},H2={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},k2={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.05ex"},xmlns:"http://www.w3.org/2000/svg",width:"6.726ex",height:"1.67ex",role:"img",focusable:"false",viewBox:"0 -716 2973 738","aria-hidden":"true"},M2={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},L2={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.05ex"},xmlns:"http://www.w3.org/2000/svg",width:"6.726ex",height:"1.67ex",role:"img",focusable:"false",viewBox:"0 -716 2973 738","aria-hidden":"true"},b2={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},_2={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.05ex"},xmlns:"http://www.w3.org/2000/svg",width:"9.495ex",height:"1.645ex",role:"img",focusable:"false",viewBox:"0 -705 4197 727","aria-hidden":"true"},Z2={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},D2={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.05ex"},xmlns:"http://www.w3.org/2000/svg",width:"9.495ex",height:"1.645ex",role:"img",focusable:"false",viewBox:"0 -705 4197 727","aria-hidden":"true"},z2={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},C2={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.05ex"},xmlns:"http://www.w3.org/2000/svg",width:"9.495ex",height:"1.645ex",role:"img",focusable:"false",viewBox:"0 -705 4197 727","aria-hidden":"true"},V2={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},S2={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.05ex"},xmlns:"http://www.w3.org/2000/svg",width:"9.495ex",height:"1.645ex",role:"img",focusable:"false",viewBox:"0 -705 4197 727","aria-hidden":"true"},A2={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},B2={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.05ex"},xmlns:"http://www.w3.org/2000/svg",width:"6.962ex",height:"1.645ex",role:"img",focusable:"false",viewBox:"0 -705 3077 727","aria-hidden":"true"},G2={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},j2={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.05ex"},xmlns:"http://www.w3.org/2000/svg",width:"9.495ex",height:"1.645ex",role:"img",focusable:"false",viewBox:"0 -705 4197 727","aria-hidden":"true"},P2={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},I2={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.05ex"},xmlns:"http://www.w3.org/2000/svg",width:"9.495ex",height:"1.645ex",role:"img",focusable:"false",viewBox:"0 -705 4197 727","aria-hidden":"true"},R2={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},X2={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.05ex"},xmlns:"http://www.w3.org/2000/svg",width:"6.962ex",height:"1.645ex",role:"img",focusable:"false",viewBox:"0 -705 3077 727","aria-hidden":"true"},N2={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},E2={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.05ex"},xmlns:"http://www.w3.org/2000/svg",width:"9.495ex",height:"1.645ex",role:"img",focusable:"false",viewBox:"0 -705 4197 727","aria-hidden":"true"},J2={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},q2={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.05ex"},xmlns:"http://www.w3.org/2000/svg",width:"9.495ex",height:"1.645ex",role:"img",focusable:"false",viewBox:"0 -705 4197 727","aria-hidden":"true"},F2={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},$2={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.464ex"},xmlns:"http://www.w3.org/2000/svg",width:"9.007ex",height:"2.009ex",role:"img",focusable:"false",viewBox:"0 -683 3981 888","aria-hidden":"true"},O2={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},U2={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.05ex"},xmlns:"http://www.w3.org/2000/svg",width:"9.495ex",height:"1.645ex",role:"img",focusable:"false",viewBox:"0 -705 4197 727","aria-hidden":"true"},K2={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},W2={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.05ex"},xmlns:"http://www.w3.org/2000/svg",width:"9.495ex",height:"1.645ex",role:"img",focusable:"false",viewBox:"0 -705 4197 727","aria-hidden":"true"},Y2={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},t1={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.452ex"},xmlns:"http://www.w3.org/2000/svg",width:"124.434ex",height:"2.149ex",role:"img",focusable:"false",viewBox:"0 -750 55000 950","aria-hidden":"true"};function a1(Q1,a,e1,l1,n1,T1){return n(),l("div",null,[a[218]||(a[218]=t("h1",{id:"xgboost面试",tabindex:"-1"},[Q("XGBoost面试? "),t("a",{class:"header-anchor",href:"#xgboost面试","aria-label":'Permalink to "XGBoost面试?"'},"​")],-1)),a[219]||(a[219]=t("h2",{id:"_1-rf和gbdt的区",tabindex:"-1"},[Q("1. RF和GBDT的区? "),t("a",{class:"header-anchor",href:"#_1-rf和gbdt的区","aria-label":'Permalink to "1. RF和GBDT的区?"'},"​")],-1)),a[220]||(a[220]=t("p",null,[t("strong",null,"相同点：")],-1)),a[221]||(a[221]=t("ul",null,[t("li",null,"都是由多棵树组成，最终的结果都是由多棵树一起决定?")],-1)),a[222]||(a[222]=t("p",null,[t("strong",null,"不同点：")],-1)),t("ul",null,[t("li",null,[a[4]||(a[4]=t("strong",null,"集成学习",-1)),a[5]||(a[5]=Q("?RF",-1)),t("mjx-container",i,[(n(),l("svg",s,[...a[0]||(a[0]=[e("",1)])])),a[1]||(a[1]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",{mathvariant:"normal"},"属"),t("mi",{mathvariant:"normal"},"于")])],-1))]),a[6]||(a[6]=Q("Bagging",-1)),t("mjx-container",m,[(n(),l("svg",d,[...a[2]||(a[2]=[e("",1)])])),a[3]||(a[3]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",{mathvariant:"normal"},"思"),t("mi",{mathvariant:"normal"},"想"),t("mi",null,"，"),t("mo",null,"?"),t("mi",null,"G"),t("mi",null,"B"),t("mi",null,"D"),t("mi",null,"T")])],-1))]),a[7]||(a[7]=Q("?Boosting$思想",-1))]),t("li",null,[a[10]||(a[10]=t("strong",null,"偏差-方差权衡",-1)),a[11]||(a[11]=Q("?RF",-1)),t("mjx-container",f,[(n(),l("svg",p,[...a[8]||(a[8]=[e("",1)])])),a[9]||(a[9]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",{mathvariant:"normal"},"不"),t("mi",{mathvariant:"normal"},"断"),t("mi",{mathvariant:"normal"},"的"),t("mi",{mathvariant:"normal"},"降"),t("mi",{mathvariant:"normal"},"低"),t("mi",{mathvariant:"normal"},"模"),t("mi",{mathvariant:"normal"},"型"),t("mi",{mathvariant:"normal"},"的"),t("mi",{mathvariant:"normal"},"方"),t("mi",{mathvariant:"normal"},"差"),t("mi",null,"，"),t("mo",null,"?"),t("mi",null,"G"),t("mi",null,"B"),t("mi",null,"D"),t("mi",null,"T")])],-1))]),a[12]||(a[12]=Q("不断的降低模型的偏差",-1))]),t("li",null,[a[15]||(a[15]=Q("**并行?*?RF",-1)),t("mjx-container",x,[(n(),l("svg",g,[...a[13]||(a[13]=[e("",1)])])),a[14]||(a[14]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",{mathvariant:"normal"},"的"),t("mi",{mathvariant:"normal"},"树"),t("mi",{mathvariant:"normal"},"可"),t("mi",{mathvariant:"normal"},"以"),t("mi",{mathvariant:"normal"},"并"),t("mi",{mathvariant:"normal"},"行"),t("mi",{mathvariant:"normal"},"生"),t("mi",{mathvariant:"normal"},"成"),t("mi",null,"，"),t("mo",null,"?"),t("mi",null,"G"),t("mi",null,"B"),t("mi",null,"D"),t("mi",null,"T")])],-1))]),a[16]||(a[16]=Q("只能顺序生成(需要等上一棵树完全生成)",-1))]),t("li",null,[a[19]||(a[19]=Q("**最终结?*?RF",-1)),t("mjx-container",h,[(n(),l("svg",u,[...a[17]||(a[17]=[e("",1)])])),a[18]||(a[18]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",{mathvariant:"normal"},"最"),t("mi",{mathvariant:"normal"},"终"),t("mi",{mathvariant:"normal"},"是"),t("mi",{mathvariant:"normal"},"多"),t("mi",{mathvariant:"normal"},"棵"),t("mi",{mathvariant:"normal"},"树"),t("mi",{mathvariant:"normal"},"进"),t("mi",{mathvariant:"normal"},"行"),t("mi",{mathvariant:"normal"},"多"),t("mi",{mathvariant:"normal"},"数"),t("mi",{mathvariant:"normal"},"表"),t("mi",{mathvariant:"normal"},"决"),t("mi",null,"（"),t("mi",{mathvariant:"normal"},"回"),t("mi",{mathvariant:"normal"},"归"),t("mi",{mathvariant:"normal"},"问"),t("mi",{mathvariant:"normal"},"题"),t("mi",{mathvariant:"normal"},"是"),t("mi",{mathvariant:"normal"},"取"),t("mi",{mathvariant:"normal"},"平"),t("mi",{mathvariant:"normal"},"均"),t("mi",null,"）"),t("mi",null,"，"),t("mo",null,"?"),t("mi",null,"G"),t("mi",null,"B"),t("mi",null,"D"),t("mi",null,"T")])],-1))]),a[20]||(a[20]=Q("是加权融?",-1))]),t("li",null,[a[23]||(a[23]=Q("**数据敏感?*?RF",-1)),t("mjx-container",w,[(n(),l("svg",v,[...a[21]||(a[21]=[e("",1)])])),a[22]||(a[22]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",{mathvariant:"normal"},"对"),t("mi",{mathvariant:"normal"},"异"),t("mi",{mathvariant:"normal"},"常"),t("mi",{mathvariant:"normal"},"值"),t("mi",{mathvariant:"normal"},"不"),t("mi",{mathvariant:"normal"},"敏"),t("mi",{mathvariant:"normal"},"感"),t("mi",null,"，"),t("mo",null,"?"),t("mi",null,"G"),t("mi",null,"B"),t("mi",null,"D"),t("mi",null,"T")])],-1))]),a[24]||(a[24]=Q("对异常值比较敏?",-1))]),t("li",null,[a[27]||(a[27]=t("strong",null,"泛化能力",-1)),a[28]||(a[28]=Q("?RF",-1)),t("mjx-container",c,[(n(),l("svg",y,[...a[25]||(a[25]=[e("",1)])])),a[26]||(a[26]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",{mathvariant:"normal"},"不"),t("mi",{mathvariant:"normal"},"易"),t("mi",{mathvariant:"normal"},"过"),t("mi",{mathvariant:"normal"},"拟"),t("mi",{mathvariant:"normal"},"合"),t("mi",null,"，"),t("mo",null,"?"),t("mi",null,"G"),t("mi",null,"B"),t("mi",null,"D"),t("mi",null,"T")])],-1))]),a[29]||(a[29]=Q("容易过拟?",-1))])]),a[223]||(a[223]=t("h2",{id:"_2-比较lr和gbdt-说说什么情景下gbdt不如lr",tabindex:"-1"},[Q("2. 比较LR和GBDT，说说什么情景下GBDT不如LR "),t("a",{class:"header-anchor",href:"#_2-比较lr和gbdt-说说什么情景下gbdt不如lr","aria-label":'Permalink to "2. 比较LR和GBDT，说说什么情景下GBDT不如LR"'},"​")],-1)),t("p",null,[a[32]||(a[32]=Q("先说?LR",-1)),t("mjx-container",H,[(n(),l("svg",k,[...a[30]||(a[30]=[e("",1)])])),a[31]||(a[31]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mo",null,"?"),t("mi",null,"G"),t("mi",null,"B"),t("mi",null,"D"),t("mi",null,"T")])],-1))]),a[33]||(a[33]=Q("的区别：",-1))]),t("ul",null,[t("li",null,[t("mjx-container",M,[(n(),l("svg",L,[...a[34]||(a[34]=[e("",1)])])),a[35]||(a[35]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"L"),t("mi",null,"R")])],-1))]),a[36]||(a[36]=Q("是线性模型，可解释性强，很容易并行化，但学习能力有限，需要大量的人工特征工程",-1))]),t("li",null,[t("mjx-container",b,[(n(),l("svg",_,[...a[37]||(a[37]=[e("",1)])])),a[38]||(a[38]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"G"),t("mi",null,"B"),t("mi",null,"D"),t("mi",null,"T")])],-1))]),a[39]||(a[39]=Q("是非线性模型，具有天然的特征组合优势，特征表达能力强，但是树与树之间无法并行训练，而且树模型很容易过拟合；",-1))])]),t("p",null,[a[42]||(a[42]=Q("当在**高维稀疏特征的场景下，",-1)),t("mjx-container",Z,[(n(),l("svg",D,[...a[40]||(a[40]=[e("",1)])])),a[41]||(a[41]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"L"),t("mi",null,"R")])],-1))]),a[43]||(a[43]=Q("的效果一般会?GBDT$?*。原因如下：",-1))]),a[224]||(a[224]=t("p",null,"先看一个例子：",-1)),a[225]||(a[225]=t("blockquote",null,[t("p",null,"假设一个二分类问题，label??，特征有100维，如果?w个样本，但其中只?0个正样本1，而这些样本的特征 f1的值为全为1，而其?990条样本的f1特征都为0(在高维稀疏的情况下这种情况很常见)?我们都知道在这种情况下，树模型很容易优化出一个使用f1特征作为重要分裂节点的树，因为这个结点直接能够将训练数据划分的很好，但是当测试的时候，却会发现效果很差，因为这个特征f1只是刚好偶然间跟y拟合到了这个规律，这也是我们常说的过拟合?")],-1)),t("p",null,[a[52]||(a[52]=Q("因为现在的模型普遍都会带着正则项，",-1)),t("strong",null,[a[46]||(a[46]=Q("?",-1)),t("mjx-container",z,[(n(),l("svg",C,[...a[44]||(a[44]=[e("",1)])])),a[45]||(a[45]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"L"),t("mi",null,"R")])],-1))]),a[47]||(a[47]=Q(" 等线性模型的正则项是对权重的惩罚",-1))]),a[53]||(a[53]=Q("，也就是 ",-1)),t("mjx-container",V,[(n(),l("svg",S,[...a[48]||(a[48]=[e("",1)])])),a[49]||(a[49]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("msub",null,[t("mi",null,"w"),t("mn",null,"1")])])],-1))]),a[54]||(a[54]=Q("一旦过大，惩罚就会很大，进一步压?",-1)),t("mjx-container",A,[(n(),l("svg",B,[...a[50]||(a[50]=[e("",1)])])),a[51]||(a[51]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("msub",null,[t("mi",null,"w"),t("mn",null,"1")])])],-1))]),a[55]||(a[55]=Q("的值，使他不至于过大。但是，树模型则不一样，**树模型的惩罚项通常为叶子节点数和深?*等，而我们都知道，对于上面这种",-1)),a[56]||(a[56]=t("code",null,"case",-1)),a[57]||(a[57]=Q("，树只需要一个节点就可以完美分割9990?0个样本，一个结点，最终产生的惩罚项极其之小?",-1))]),a[226]||(a[226]=t("p",null,[Q("这也就是为什么在高维稀疏特征的时候，线性模型会比非线性模型好的原因了?"),t("em",null,"带正则化的线性模型比较不容易对稀疏特征过拟合?")],-1)),a[227]||(a[227]=t("h2",{id:"_3-简单介绍一下xgboost",tabindex:"-1"},[Q("3. 简单介绍一下XGBoost? "),t("a",{class:"header-anchor",href:"#_3-简单介绍一下xgboost","aria-label":'Permalink to "3. 简单介绍一下XGBoost?"'},"​")],-1)),t("p",null,[t("mjx-container",G,[(n(),l("svg",j,[...a[58]||(a[58]=[e("",1)])])),a[59]||(a[59]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"X"),t("mi",null,"G"),t("mi",null,"B"),t("mi",null,"o"),t("mi",null,"o"),t("mi",null,"s"),t("mi",null,"t")])],-1))]),a[66]||(a[66]=Q("是大规模、分布式的通用梯度提升(GBDT)库，它在GB框架下实现了GBDT和一些广义线性ML算法?XGBoost",-1)),t("mjx-container",P,[(n(),l("svg",I,[...a[60]||(a[60]=[e("",1)])])),a[61]||(a[61]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",{mathvariant:"normal"},"是"),t("mi",{mathvariant:"normal"},"一"),t("mi",{mathvariant:"normal"},"种"),t("mi",{mathvariant:"normal"},"集"),t("mi",{mathvariant:"normal"},"成"),t("mi",{mathvariant:"normal"},"学"),t("mi",{mathvariant:"normal"},"习"),t("mi",{mathvariant:"normal"},"算"),t("mi",{mathvariant:"normal"},"法"),t("mi",null,"，"),t("mi",{mathvariant:"normal"},"属"),t("mi",{mathvariant:"normal"},"于"),t("mn",null,"3"),t("mi",{mathvariant:"normal"},"类"),t("mi",{mathvariant:"normal"},"常"),t("mi",{mathvariant:"normal"},"用"),t("mi",{mathvariant:"normal"},"的"),t("mi",{mathvariant:"normal"},"集"),t("mi",{mathvariant:"normal"},"成"),t("mi",{mathvariant:"normal"},"方"),t("mi",{mathvariant:"normal"},"法"),t("mo",{stretchy:"false"},"(")])],-1))]),a[67]||(a[67]=Q("Bagging",-1)),t("mjx-container",R,[(n(),l("svg",X,[...a[62]||(a[62]=[e("",1)])])),a[63]||(a[63]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mo",null,"?"),t("mi",null,"B"),t("mi",null,"o"),t("mi",null,"o"),t("mi",null,"s"),t("mi",null,"t"),t("mi",null,"i"),t("mi",null,"n"),t("mi",null,"g")])],-1))]),a[68]||(a[68]=Q("?Stacking",-1)),t("mjx-container",N,[(n(),l("svg",E,[...a[64]||(a[64]=[e("",1)])])),a[65]||(a[65]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mo",{stretchy:"false"},")"),t("mi",{mathvariant:"normal"},"中"),t("mi",{mathvariant:"normal"},"的")])],-1))]),a[69]||(a[69]=Q("Boosting$算法类别。它是一个加法模型，每次迭代都学习一棵CART树来拟合之前 t-1 棵树的预测结果与训练样本真实值的残差?",-1))]),t("p",null,[t("mjx-container",J,[(n(),l("svg",q,[...a[70]||(a[70]=[e("",1)])])),a[71]||(a[71]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"X"),t("mi",null,"G"),t("mi",null,"B"),t("mi",null,"o"),t("mi",null,"o"),t("mi",null,"s"),t("mi",null,"t")])],-1))]),a[72]||(a[72]=Q("?GBDT$进行了一系列优化，比如损失函数进行了二阶泰勒展开、目标函数加入正则项、支持并行、默认缺失值处理等，在可扩展性和训练速度上有了巨大的提升，但其核心思想没有大的变化?",-1))]),a[228]||(a[228]=t("h2",{id:"_4-xgboost与gbdt有什么不",tabindex:"-1"},[Q("4. XGBoost与GBDT有什么不? "),t("a",{class:"header-anchor",href:"#_4-xgboost与gbdt有什么不","aria-label":'Permalink to "4. XGBoost与GBDT有什么不?"'},"​")],-1)),t("ul",null,[t("li",null,[a[79]||(a[79]=t("strong",null,"基分类器",-1)),a[80]||(a[80]=Q("?XGBoost",-1)),t("mjx-container",F,[(n(),l("svg",$,[...a[73]||(a[73]=[e("",1)])])),a[74]||(a[74]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",{mathvariant:"normal"},"的"),t("mi",{mathvariant:"normal"},"基"),t("mi",{mathvariant:"normal"},"分"),t("mi",{mathvariant:"normal"},"类"),t("mi",{mathvariant:"normal"},"器"),t("mi",{mathvariant:"normal"},"不"),t("mi",{mathvariant:"normal"},"仅"),t("mi",{mathvariant:"normal"},"支"),t("mo",null,"?"),t("mi",null,"C"),t("mi",null,"A"),t("mi",null,"R"),t("mi",null,"T")])],-1))]),a[81]||(a[81]=Q("决策树，还支持线性分类器，此?XGBoost",-1)),t("mjx-container",O,[(n(),l("svg",U,[...a[75]||(a[75]=[e("",1)])])),a[76]||(a[76]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",{mathvariant:"normal"},"相"),t("mi",{mathvariant:"normal"},"当"),t("mi",{mathvariant:"normal"},"于"),t("mi",{mathvariant:"normal"},"带")])],-1))]),a[82]||(a[82]=Q("L1",-1)),t("mjx-container",K,[(n(),l("svg",W,[...a[77]||(a[77]=[e("",1)])])),a[78]||(a[78]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mo",null,"?"),t("mi",null,"L"),t("mn",null,"2")])],-1))]),a[83]||(a[83]=Q("正则化项?LR$回归（分类问题）或者线性回归（回归问题）?",-1))]),t("li",null,[a[88]||(a[88]=t("strong",null,"导数信息",-1)),a[89]||(a[89]=Q("?XGBoost",-1)),t("mjx-container",Y,[(n(),l("svg",t2,[...a[84]||(a[84]=[e("",1)])])),a[85]||(a[85]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",{mathvariant:"normal"},"对"),t("mi",{mathvariant:"normal"},"损"),t("mi",{mathvariant:"normal"},"失"),t("mi",{mathvariant:"normal"},"函"),t("mi",{mathvariant:"normal"},"数"),t("mi",{mathvariant:"normal"},"做"),t("mi",{mathvariant:"normal"},"了"),t("mi",{mathvariant:"normal"},"二"),t("mi",{mathvariant:"normal"},"阶"),t("mi",{mathvariant:"normal"},"泰"),t("mi",{mathvariant:"normal"},"勒"),t("mi",{mathvariant:"normal"},"展"),t("mi",{mathvariant:"normal"},"开"),t("mi",null,"，"),t("mi",{mathvariant:"normal"},"可"),t("mi",{mathvariant:"normal"},"以"),t("mi",{mathvariant:"normal"},"更"),t("mi",{mathvariant:"normal"},"为"),t("mi",{mathvariant:"normal"},"精"),t("mi",{mathvariant:"normal"},"准"),t("mi",{mathvariant:"normal"},"的"),t("mi",{mathvariant:"normal"},"逼"),t("mi",{mathvariant:"normal"},"近"),t("mi",{mathvariant:"normal"},"真"),t("mi",{mathvariant:"normal"},"实"),t("mi",{mathvariant:"normal"},"的"),t("mi",{mathvariant:"normal"},"损"),t("mi",{mathvariant:"normal"},"失"),t("mi",{mathvariant:"normal"},"函"),t("mi",{mathvariant:"normal"},"数"),t("mi",null,"，")])],-1))]),a[90]||(a[90]=Q("GBDT",-1)),t("mjx-container",a2,[(n(),l("svg",Q2,[...a[86]||(a[86]=[e("",1)])])),a[87]||(a[87]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",{mathvariant:"normal"},"只"),t("mi",{mathvariant:"normal"},"用"),t("mi",{mathvariant:"normal"},"了"),t("mi",{mathvariant:"normal"},"一"),t("mi",{mathvariant:"normal"},"阶"),t("mi",{mathvariant:"normal"},"导"),t("mi",{mathvariant:"normal"},"数"),t("mi",{mathvariant:"normal"},"信"),t("mi",{mathvariant:"normal"},"息"),t("mi",null,"，"),t("mi",{mathvariant:"normal"},"并"),t("mi",{mathvariant:"normal"},"且")])],-1))]),a[91]||(a[91]=Q("XGBoost$还支持自定义损失函数，只要损失函数一阶、二阶可导?",-1))]),a[92]||(a[92]=t("li",null,"**正则?*?XGBoost$的目标函数加了正则项?相当于预剪枝，使得学习出来的模型更加不容易过拟合?",-1)),a[93]||(a[93]=t("li",null,"**列抽?*?XGBoost$支持列采样，与随机森林类似，用于防止过拟合?",-1)),a[94]||(a[94]=t("li",null,"**缺失值处?*：对树中的每个非叶子结点?XGBoost$可以自动学习出它的默认分裂方向。如果某个样本该特征值缺失，会将其划入默认分支?",-1)),a[95]||(a[95]=t("li",null,"**并行?*：注意不是树维度的并行，而是特征维度的并行?XGBoost$预先将每个特征按特征值排好序，存储为块结构，分裂结点时可以采用多线程并行查找每个特征的最佳分割点，极大提升训练速度?",-1)),a[96]||(a[96]=t("li",null,"**可扩展?*：损失函数支持自定义，只需要新的损失函数二阶可导?",-1))]),a[229]||(a[229]=t("h2",{id:"_5-xgboost为什么可以并行训",tabindex:"-1"},[Q("5. XGBoost为什么可以并行训? "),t("a",{class:"header-anchor",href:"#_5-xgboost为什么可以并行训","aria-label":'Permalink to "5. XGBoost为什么可以并行训?"'},"​")],-1)),t("ul",null,[t("li",null,[a[99]||(a[99]=t("strong",null,"不是说每棵树可以并行训练",-1)),a[100]||(a[100]=Q("?XGBoost",-1)),t("mjx-container",e2,[(n(),l("svg",l2,[...a[97]||(a[97]=[e("",1)])])),a[98]||(a[98]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",{mathvariant:"normal"},"本"),t("mi",{mathvariant:"normal"},"质"),t("mi",{mathvariant:"normal"},"上"),t("mi",{mathvariant:"normal"},"仍"),t("mi",{mathvariant:"normal"},"然"),t("mi",{mathvariant:"normal"},"采"),t("mo",null,"?"),t("mi",null,"B"),t("mi",null,"o"),t("mi",null,"o"),t("mi",null,"s"),t("mi",null,"t"),t("mi",null,"i"),t("mi",null,"n"),t("mi",null,"g")])],-1))]),a[101]||(a[101]=Q("思想，每棵树训练前需要等前面的树训练完成才能开始训练?",-1))]),a[102]||(a[102]=t("li",null,[Q("**而是特征维度的并?*：在训练之前，每个特征按特征值对样本进行预排序，并存储为"),t("code",null,"block"),Q("结构，在后面查找特征分割点时可以重复使用，而且特征已经被存储为一个个"),t("code",null,"block"),Q("结构，那么在寻找每个特征的最佳分割点时，可以利用多线程对每个"),t("code",null,"block"),Q("并行计算?")],-1)),a[103]||(a[103]=t("li",null,"注意xgboost的并行不是tree粒度的并行，xgboost也是一次迭代完才能进行下一次迭代的（第t次迭代的代价函数里包含了前面t-1次迭代的预测值）。xgboost的并行是在特征粒度上的。我们知道，决策树的学习最耗时的一个步骤就是对特征的值进行排序（因为要确定最佳分割点），xgboost在训练之前，预先对数据进行了排序，然后保存为block结构，后面的迭代中重复地使用这个结构，大大减小计算量。这个block结构也使得并行成为了可能，在进行节点的分裂时，需要计算每个特征的增益，最终选增益最大的那个特征去做分裂，那么各个特征的增益计算就可以开多线程进行?",-1))]),a[230]||(a[230]=e("",3)),t("ul",null,[t("li",null,[a[106]||(a[106]=Q("**目标函数中增加了正则?*：使用叶子结点的数目和叶子结点权重的",-1)),t("mjx-container",n2,[(n(),l("svg",T2,[...a[104]||(a[104]=[e("",1)])])),a[105]||(a[105]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"L"),t("mn",null,"2")])],-1))]),a[107]||(a[107]=Q("模的平方，控制树的复杂度?",-1))]),a[108]||(a[108]=t("li",null,"**设置目标函数的增益阈?*：如果分裂后目标函数的增益小于该阈值，则不分裂?",-1)),a[109]||(a[109]=t("li",null,"**设置最小样本权重和的阈?*：当引入一次分裂后，重新计算新生成的左、右两个叶子结点的样本权重和。如果任一个叶子结点的样本权重低于某一个阈值（最小样本权重和），也会放弃此次分裂?",-1)),a[110]||(a[110]=t("li",null,"**设置树的最大深?*?XGBoost$ 先从顶到底建立树直到最大深度，再从底到顶反向检查是否有不满足分裂条件的结点，进行剪枝?",-1)),a[111]||(a[111]=t("li",null,[t("strong",null,"shrinkage"),Q(": 可以叫学习率或步长，为了给后面的训练留出更多的学习空?")],-1)),a[112]||(a[112]=t("li",null,"**子采?*：每轮计算可以不使用全部样本，使算法更加保守",-1)),a[113]||(a[113]=t("li",null,"**列抽?*：训练的时候只用一部分特征（不考虑剩余的block块即可）",-1))]),a[231]||(a[231]=e("",2)),t("p",null,[t("mjx-container",o2,[(n(),l("svg",r2,[...a[114]||(a[114]=[e("",1)])])),a[115]||(a[115]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"X"),t("mi",null,"G"),t("mi",null,"B"),t("mi",null,"o"),t("mi",null,"o"),t("mi",null,"s"),t("mi",null,"t")])],-1))]),a[116]||(a[116]=Q("模型的一个优点就是允许特征存在缺失值。对缺失值的处理方式如下?",-1))]),t("ul",null,[t("li",null,[t("mjx-container",i2,[(n(),l("svg",s2,[...a[117]||(a[117]=[e("",1)])])),a[118]||(a[118]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"X"),t("mi",null,"G"),t("mi",null,"B"),t("mi",null,"o"),t("mi",null,"o"),t("mi",null,"s"),t("mi",null,"t")])],-1))]),a[119]||(a[119]=t("strong",null,"在构建树的节点过程中只考虑非缺失值的数据遍历",-1)),a[120]||(a[120]=Q("，而为每个节点增加了一个缺省方向，当样本相应的特征值缺失时，可以被归类到缺省方向上，最优的缺省方向可以从数据中学到。至于如何学到缺省值的分支，其实很简单，分别枚举特征缺省的样本归为左右分支后的增益，选择增益最大的枚举项即为最优缺省方向?",-1))]),a[121]||(a[121]=t("li",null,[Q("如果?"),t("em",null,"训练中没有缺失值而在预测中出现缺失，那么会自动将缺失值的划分方向放到右子结点"),Q("*?")],-1))]),a[232]||(a[232]=e("",4)),t("ul",null,[a[125]||(a[125]=t("li",null,[Q("训练前预先将特征**对特征值进行排?*，存储为"),t("code",null,"block"),Q("结构，以便在结点分裂时可以重复使?")],-1)),a[126]||(a[126]=t("li",null,[Q("采用"),t("strong",null,"特征并行"),Q("的方法利用多个线程分别计算每个特征的最佳分割点，根据每次分裂后产生的增益，**最终选择增益最大的那个特征的特征?*作为最佳分裂点?")],-1)),t("li",null,[t("mjx-container",m2,[(n(),l("svg",d2,[...a[122]||(a[122]=[e("",1)])])),a[123]||(a[123]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"X"),t("mi",null,"G"),t("mi",null,"B"),t("mi",null,"o"),t("mi",null,"o"),t("mi",null,"s"),t("mi",null,"t")])],-1))]),a[124]||(a[124]=Q("使用**直方图近似算?*，对特征排序后仅选择常数个候选分裂位置作为候选分裂点，极大提升了结点分裂时的计算效率?",-1))])]),a[233]||(a[233]=t("h2",{id:"_11-xgboost的scalable性如何体现",tabindex:"-1"},[Q("11. XGBoost的Scalable性如何体现？ "),t("a",{class:"header-anchor",href:"#_11-xgboost的scalable性如何体现","aria-label":'Permalink to "11. XGBoost的Scalable性如何体现？"'},"​")],-1)),t("ul",null,[t("li",null,[a[129]||(a[129]=t("strong",null,"基分类器的scalability",-1)),a[130]||(a[130]=Q("：弱分类器可以支?CART",-1)),t("mjx-container",f2,[(n(),l("svg",p2,[...a[127]||(a[127]=[e("",1)])])),a[128]||(a[128]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",{mathvariant:"normal"},"决"),t("mi",{mathvariant:"normal"},"策"),t("mi",{mathvariant:"normal"},"树"),t("mi",null,"，"),t("mi",{mathvariant:"normal"},"也"),t("mi",{mathvariant:"normal"},"可"),t("mi",{mathvariant:"normal"},"以"),t("mi",{mathvariant:"normal"},"支"),t("mo",null,"?"),t("mi",null,"L"),t("mi",null,"R")])],-1))]),a[131]||(a[131]=Q("?",-1))]),a[132]||(a[132]=t("li",null,[t("strong",null,"目标函数的scalability"),Q("：支持自定义loss function，只需要其一阶、二阶可导。有这个特性是因为泰勒二阶展开，得到通用的目标函数形式?")],-1)),a[133]||(a[133]=t("li",null,[t("strong",null,"学习方法的scalability"),Q("："),t("code",null,"block"),Q("结构支持并行化，支持 Out-of-core计算?")],-1))]),a[234]||(a[234]=t("h2",{id:"_12-xgboost如何评价特征的重要性",tabindex:"-1"},[Q("12. XGBoost如何评价特征的重要性？ "),t("a",{class:"header-anchor",href:"#_12-xgboost如何评价特征的重要性","aria-label":'Permalink to "12. XGBoost如何评价特征的重要性？"'},"​")],-1)),a[235]||(a[235]=t("p",null,"常用的三种方法来评判模型中特征的重要程度?",-1)),a[236]||(a[236]=t("ul",null,[t("li",null,[t("code",null,"freq"),Q(" ?频率是表示特定特征在模型树中发生分裂的相对次数的百分?")]),t("li",null,[t("code",null,"gain"),Q(" ?增益意味着相应的特征对通过对模型中的每个树采取每个特征的贡献而计算出的模型的相对贡献。与其他特征相比，此度量值的较高值意味着它对于生成预测更为重要?")]),t("li",null,[t("code",null,"cover"),Q(" ：覆盖度量指的是与此功能相关的观测的相对数量。例如，如果您有100个观察值，4个特征和3棵树，并且假设特?分别用于决定?，树2和树3?0个，5个和2个观察值的叶节?那么该度量将计算此功能的覆盖范围?10 + 5 + 2 = 17$个观测值。这将针对所?项功能进行计算，并将?7个百分比表示所有功能的覆盖指标?")])],-1)),t("p",null,[a[139]||(a[139]=Q("*",-1)),t("em",null,[t("mjx-container",x2,[(n(),l("svg",g2,[...a[134]||(a[134]=[e("",1)])])),a[135]||(a[135]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"X"),t("mi",null,"G"),t("mi",null,"B"),t("mi",null,"o"),t("mi",null,"o"),t("mi",null,"s"),t("mi",null,"t")])],-1))]),a[136]||(a[136]=Q("是根据",-1)),a[137]||(a[137]=t("code",null,"gain",-1)),a[138]||(a[138]=Q("来做重要性判断的?",-1))])]),a[237]||(a[237]=t("h2",{id:"_14-xgboost的优缺",tabindex:"-1"},[Q("14. XGBoost的优缺? "),t("a",{class:"header-anchor",href:"#_14-xgboost的优缺","aria-label":'Permalink to "14. XGBoost的优缺?"'},"​")],-1)),t("ul",null,[t("li",null,[a[216]||(a[216]=t("p",null,"优点",-1)),t("ul",null,[t("li",null,[a[144]||(a[144]=Q("*",-1)),a[145]||(a[145]=t("em",null,"精度更高?",-1)),a[146]||(a[146]=Q()),t("mjx-container",h2,[(n(),l("svg",u2,[...a[140]||(a[140]=[e("",1)])])),a[141]||(a[141]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"G"),t("mi",null,"B"),t("mi",null,"D"),t("mi",null,"T")])],-1))]),a[147]||(a[147]=Q(" 只用到一阶泰勒展开，?",-1)),t("mjx-container",w2,[(n(),l("svg",v2,[...a[142]||(a[142]=[e("",1)])])),a[143]||(a[143]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"X"),t("mi",null,"G"),t("mi",null,"B"),t("mi",null,"o"),t("mi",null,"o"),t("mi",null,"s"),t("mi",null,"t")])],-1))]),a[148]||(a[148]=Q(" 对损失函数进行了二阶泰勒展开?XGBoost$ 引入二阶导一方面是为了增加精度，另一方面也是为了能够自定义损失函数，二阶泰勒展开可以近似大量损失函数?",-1))]),t("li",null,[a[159]||(a[159]=t("strong",null,"灵活性更强：",-1)),a[160]||(a[160]=Q()),t("mjx-container",c2,[(n(),l("svg",y2,[...a[149]||(a[149]=[e("",1)])])),a[150]||(a[150]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"G"),t("mi",null,"B"),t("mi",null,"D"),t("mi",null,"T")])],-1))]),a[161]||(a[161]=Q(" ?",-1)),t("mjx-container",H2,[(n(),l("svg",k2,[...a[151]||(a[151]=[e("",1)])])),a[152]||(a[152]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"C"),t("mi",null,"A"),t("mi",null,"R"),t("mi",null,"T")])],-1))]),a[162]||(a[162]=Q(" 作为基分类器?XGBoost$ 不仅支持 ",-1)),t("mjx-container",M2,[(n(),l("svg",L2,[...a[153]||(a[153]=[e("",1)])])),a[154]||(a[154]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"C"),t("mi",null,"A"),t("mi",null,"R"),t("mi",null,"T")])],-1))]),a[163]||(a[163]=Q(" 还支持线性分类器，使用线性分类器?",-1)),t("mjx-container",b2,[(n(),l("svg",_2,[...a[155]||(a[155]=[e("",1)])])),a[156]||(a[156]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"X"),t("mi",null,"G"),t("mi",null,"B"),t("mi",null,"o"),t("mi",null,"o"),t("mi",null,"s"),t("mi",null,"t")])],-1))]),a[164]||(a[164]=Q(" 相当于带 ?正则化项的逻辑斯蒂回归（分类问题）或者线性回归（回归问题）。此外，",-1)),t("mjx-container",Z2,[(n(),l("svg",D2,[...a[157]||(a[157]=[e("",1)])])),a[158]||(a[158]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"X"),t("mi",null,"G"),t("mi",null,"B"),t("mi",null,"o"),t("mi",null,"o"),t("mi",null,"s"),t("mi",null,"t")])],-1))]),a[165]||(a[165]=Q(" 工具支持自定义损失函数，只需函数支持一阶和二阶求导?",-1))]),t("li",null,[a[172]||(a[172]=t("strong",null,"正则化：",-1)),a[173]||(a[173]=Q()),t("mjx-container",z2,[(n(),l("svg",C2,[...a[166]||(a[166]=[e("",1)])])),a[167]||(a[167]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"X"),t("mi",null,"G"),t("mi",null,"B"),t("mi",null,"o"),t("mi",null,"o"),t("mi",null,"s"),t("mi",null,"t")])],-1))]),a[174]||(a[174]=Q(" 在目标函数中加入了正则项，用于控制模型的复杂度。正则项里包含了树的叶子节点个数、叶子节点权重的 范式。正则项降低了模型的方差，使学习出来的模型更加简单，有助于防止过拟合，这也是",-1)),t("mjx-container",V2,[(n(),l("svg",S2,[...a[168]||(a[168]=[e("",1)])])),a[169]||(a[169]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"X"),t("mi",null,"G"),t("mi",null,"B"),t("mi",null,"o"),t("mi",null,"o"),t("mi",null,"s"),t("mi",null,"t")])],-1))]),a[175]||(a[175]=Q("优于传统",-1)),t("mjx-container",A2,[(n(),l("svg",B2,[...a[170]||(a[170]=[e("",1)])])),a[171]||(a[171]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"G"),t("mi",null,"B"),t("mi",null,"D"),t("mi",null,"T")])],-1))]),a[176]||(a[176]=Q("的一个特性?",-1))]),a[214]||(a[214]=t("li",null,[Q("*"),t("em",null,"Shrinkage（缩减）?"),Q(" 相当于学习速率?XGBoost$ 在进行完一次迭代后，会将叶子节点的权重乘上该系数，主要是为了削弱每棵树的影响，让后面有更大的学习空间。传?GBDT$的实现也有学习速率?")],-1)),t("li",null,[a[183]||(a[183]=t("strong",null,"列抽样：",-1)),a[184]||(a[184]=Q()),t("mjx-container",G2,[(n(),l("svg",j2,[...a[177]||(a[177]=[e("",1)])])),a[178]||(a[178]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"X"),t("mi",null,"G"),t("mi",null,"B"),t("mi",null,"o"),t("mi",null,"o"),t("mi",null,"s"),t("mi",null,"t")])],-1))]),a[185]||(a[185]=Q(" 借鉴了随机森林的做法，支持列抽样，不仅能降低过拟合，还能减少计算。这也是",-1)),t("mjx-container",P2,[(n(),l("svg",I2,[...a[179]||(a[179]=[e("",1)])])),a[180]||(a[180]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"X"),t("mi",null,"G"),t("mi",null,"B"),t("mi",null,"o"),t("mi",null,"o"),t("mi",null,"s"),t("mi",null,"t")])],-1))]),a[186]||(a[186]=Q("异于传统",-1)),t("mjx-container",R2,[(n(),l("svg",X2,[...a[181]||(a[181]=[e("",1)])])),a[182]||(a[182]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"G"),t("mi",null,"B"),t("mi",null,"D"),t("mi",null,"T")])],-1))]),a[187]||(a[187]=Q("的一个特性；",-1))]),t("li",null,[a[190]||(a[190]=t("strong",null,"缺失值处理：",-1)),a[191]||(a[191]=Q(" 对于特征的值有缺失的样本，",-1)),t("mjx-container",N2,[(n(),l("svg",E2,[...a[188]||(a[188]=[e("",1)])])),a[189]||(a[189]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"X"),t("mi",null,"G"),t("mi",null,"B"),t("mi",null,"o"),t("mi",null,"o"),t("mi",null,"s"),t("mi",null,"t")])],-1))]),a[192]||(a[192]=Q(" 采用的稀疏感知算法可以自动学习出它的分裂方向?",-1))]),t("li",null,[a[204]||(a[204]=Q("*",-1)),t("em",null,[t("mjx-container",J2,[(n(),l("svg",q2,[...a[193]||(a[193]=[e("",1)])])),a[194]||(a[194]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"X"),t("mi",null,"G"),t("mi",null,"B"),t("mi",null,"o"),t("mi",null,"o"),t("mi",null,"s"),t("mi",null,"t")])],-1))]),a[195]||(a[195]=Q("工具支持并行?",-1))]),a[205]||(a[205]=Q()),t("mjx-container",F2,[(n(),l("svg",$2,[...a[196]||(a[196]=[e("",1)])])),a[197]||(a[197]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"B"),t("mi",null,"o"),t("mi",null,"o"),t("mi",null,"s"),t("mi",null,"t"),t("mi",null,"i"),t("mi",null,"n"),t("mi",null,"g")])],-1))]),a[206]||(a[206]=Q("不是一种串行的结构?怎么并行的？注意",-1)),t("mjx-container",O2,[(n(),l("svg",U2,[...a[198]||(a[198]=[e("",1)])])),a[199]||(a[199]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"X"),t("mi",null,"G"),t("mi",null,"B"),t("mi",null,"o"),t("mi",null,"o"),t("mi",null,"s"),t("mi",null,"t")])],-1))]),a[207]||(a[207]=Q("的并行不是树粒度的并行，",-1)),t("mjx-container",K2,[(n(),l("svg",W2,[...a[200]||(a[200]=[e("",1)])])),a[201]||(a[201]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"X"),t("mi",null,"G"),t("mi",null,"B"),t("mi",null,"o"),t("mi",null,"o"),t("mi",null,"s"),t("mi",null,"t")])],-1))]),a[208]||(a[208]=Q("也是一次迭代完才能进行下一次迭代的（第次迭代的代价函数里包含了前面次迭代的预测值）?XGBoost",-1)),t("mjx-container",Y2,[(n(),l("svg",t1,[...a[202]||(a[202]=[e("",1)])])),a[203]||(a[203]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",{mathvariant:"normal"},"的"),t("mi",{mathvariant:"normal"},"并"),t("mi",{mathvariant:"normal"},"行"),t("mi",{mathvariant:"normal"},"是"),t("mi",{mathvariant:"normal"},"在"),t("mi",{mathvariant:"normal"},"特"),t("mi",{mathvariant:"normal"},"征"),t("mi",{mathvariant:"normal"},"粒"),t("mi",{mathvariant:"normal"},"度"),t("mi",{mathvariant:"normal"},"上"),t("mi",{mathvariant:"normal"},"的"),t("mrow",{"data-mjx-texclass":"ORD"},[t("mo",null,"。")]),t("mi",{mathvariant:"normal"},"我"),t("mi",{mathvariant:"normal"},"们"),t("mi",{mathvariant:"normal"},"知"),t("mi",{mathvariant:"normal"},"道"),t("mi",null,"，"),t("mi",{mathvariant:"normal"},"决"),t("mi",{mathvariant:"normal"},"策"),t("mi",{mathvariant:"normal"},"树"),t("mi",{mathvariant:"normal"},"的"),t("mi",{mathvariant:"normal"},"学"),t("mi",{mathvariant:"normal"},"习"),t("mi",{mathvariant:"normal"},"最"),t("mi",{mathvariant:"normal"},"耗"),t("mi",{mathvariant:"normal"},"时"),t("mi",{mathvariant:"normal"},"的"),t("mi",{mathvariant:"normal"},"一"),t("mi",{mathvariant:"normal"},"个"),t("mi",{mathvariant:"normal"},"步"),t("mi",{mathvariant:"normal"},"骤"),t("mi",{mathvariant:"normal"},"就"),t("mi",{mathvariant:"normal"},"是"),t("mi",{mathvariant:"normal"},"对"),t("mi",{mathvariant:"normal"},"特"),t("mi",{mathvariant:"normal"},"征"),t("mi",{mathvariant:"normal"},"的"),t("mi",{mathvariant:"normal"},"值"),t("mi",{mathvariant:"normal"},"进"),t("mi",{mathvariant:"normal"},"行"),t("mi",{mathvariant:"normal"},"排"),t("mi",{mathvariant:"normal"},"序"),t("mi",null,"（"),t("mi",{mathvariant:"normal"},"因"),t("mi",{mathvariant:"normal"},"为"),t("mi",{mathvariant:"normal"},"要"),t("mi",{mathvariant:"normal"},"确"),t("mi",{mathvariant:"normal"},"定"),t("mi",{mathvariant:"normal"},"最"),t("mi",{mathvariant:"normal"},"佳"),t("mi",{mathvariant:"normal"},"分"),t("mi",{mathvariant:"normal"},"割"),t("mi",{mathvariant:"normal"},"点"),t("mi",null,"）"),t("mi",null,"，")])],-1))]),a[209]||(a[209]=Q("XGBoost$在训练之前，预先对数据进行了排序，然后保存为",-1)),a[210]||(a[210]=t("code",null,"block",-1)),a[211]||(a[211]=Q("结构，后面的迭代中重复地使用这个结构，大大减小计算量。这个",-1)),a[212]||(a[212]=t("code",null,"block",-1)),a[213]||(a[213]=Q("结构也使得并行成为了可能，在进行节点的分裂时，需要计算每个特征的增益，最终选增益最大的那个特征去做分裂，那么各个特征的增益计算就可以开多线程进行?",-1))]),a[215]||(a[215]=t("li",null,[Q("*"),t("em",null,"可并行的近似算法?"),Q(" 树节点在进行分裂时，我们需要计算每个特征的每个分割点对应的增益，即用贪心法枚举所有可能的分割点。当数据无法一次载入内存或者在分布式情况下，贪心算法效率就会变得很低，所?XGBoost$还提出了一种可并行的近似算法，用于高效地生成候选的分割点?")],-1))])]),a[217]||(a[217]=t("li",null,[t("p",null,"缺点"),t("ul",null,[t("li",null,[Q("虽然利用预排序和近似算法可以降低寻找最佳分裂点的计算量，但"),t("strong",null,"在节点分裂过程中仍需要遍历数据集"),Q("?")]),t("li",null,[t("strong",null,"预排序过程的空间复杂度过?*，不仅需要存储特征值，还需要存储特征对应样本的梯度统计值的索引，相当于"),Q("消耗了两倍的内存**?")])])],-1))]),a[238]||(a[238]=e("",10))])}const i1=T(r,[["render",a1]]);export{r1 as __pageData,i1 as default};
