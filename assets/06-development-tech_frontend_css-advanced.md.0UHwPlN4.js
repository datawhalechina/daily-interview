import{_ as a,c as n,o as i,ag as p}from"./chunks/framework.DT5BmYxR.js";const b=JSON.parse('{"title":"校招前端面试常见问题【3】——CSS","description":"","frontmatter":{},"headers":[],"relativePath":"06-development-tech/frontend/css-advanced.md","filePath":"06-development-tech/frontend/css-advanced.md"}'),e={name:"06-development-tech/frontend/css-advanced.md"};function l(t,s,h,r,k,d){return i(),n("div",null,[...s[0]||(s[0]=[p(`<h1 id="校招前端面试常见问题【3】——css" tabindex="-1">校招前端面试常见问题【3】——CSS <a class="header-anchor" href="#校招前端面试常见问题【3】——css" aria-label="Permalink to &quot;校招前端面试常见问题【3】——CSS&quot;">​</a></h1><h2 id="_1、盒模型" tabindex="-1">1、盒模型 <a class="header-anchor" href="#_1、盒模型" aria-label="Permalink to &quot;1、盒模型&quot;">​</a></h2><h3 id="q-请简述一下-css-盒模型" tabindex="-1">Q：请简述一下 CSS 盒模型？ <a class="header-anchor" href="#q-请简述一下-css-盒模型" aria-label="Permalink to &quot;Q：请简述一下 CSS 盒模型？&quot;">​</a></h3><p><img src="http://www.shadowingszy.top/images//www.shadowingszy.top/images/flex.png" alt="盒模型"></p><p>flex 的各种属性：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>1、flex-direction</span></span>
<span class="line"><span>属性决定主轴的方向（即项目的排列方向）。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>row（默认值）：主轴为水平方向，起点在左端。</span></span>
<span class="line"><span>row-reverse：主轴为水平方向，起点在右端。</span></span>
<span class="line"><span>column：主轴为垂直方向，起点在上沿。</span></span>
<span class="line"><span>column-reverse：主轴为垂直方向，起点在下沿。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>2、flex-wrap</span></span>
<span class="line"><span>默认情况下，项目都排在”轴线”上。本属性定义如果一条轴线排不下，如何换行。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>nowrap（默认值）：不换行。</span></span>
<span class="line"><span>wrap：换行，第一行在上方。</span></span>
<span class="line"><span>wrap-reverse：换行，第一行在下方。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span></span></span>
<span class="line"><span>3、align-items</span></span>
<span class="line"><span>定义弹性盒子在交叉轴上如何对齐。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>flex-start：交叉轴的起点对齐。</span></span>
<span class="line"><span>flex-end：交叉轴的终点对齐。</span></span>
<span class="line"><span>center：交叉轴的中点对齐。</span></span>
<span class="line"><span>baseline: 项目的第一行文字的基线对齐。</span></span>
<span class="line"><span>stretch（默认值）：如果项目未设置高度或设为 auto，将占满整个容器的高度。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span></span></span>
<span class="line"><span>4、justify-content</span></span>
<span class="line"><span>定义弹性盒子在主轴方向上的对齐方式。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>flex-start：容器开头对齐。</span></span>
<span class="line"><span>flex-end：容器终点对齐。</span></span>
<span class="line"><span>center：容器中点对齐。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="_4、常见概念" tabindex="-1">4、常见概念 <a class="header-anchor" href="#_4、常见概念" aria-label="Permalink to &quot;4、常见概念&quot;">​</a></h2><h3 id="q-fc-是什么-bfc-和-ifc-是什么" tabindex="-1">Q：FC 是什么？BFC 和 IFC 是什么？ <a class="header-anchor" href="#q-fc-是什么-bfc-和-ifc-是什么" aria-label="Permalink to &quot;Q：FC 是什么？BFC 和 IFC 是什么？&quot;">​</a></h3><p>FC：格式化模型。</p><p>FC 会根据 CSS 盒子模型将文档中的元素转换为一个个的盒子，每个盒子的布局由以下因素决定： 1、盒子的尺寸：精确指定、由约束条件指定或没有指定 2、盒子的类型：行内盒子（inline）、行内级盒子（inline-level）、原子行内级盒子（atomic inline-level）、块盒子（block） 3、定位方案：普通流定位、浮动定位或绝对定位 4、文档树中的其它元素：即当前盒子的子元素或兄弟元素 5、视窗尺寸与位置 6、包含的图片的尺寸 7、其他的某些外部因素</p><p>BFC：块级格式化上下文。</p><p>1、在 BFC 中，盒子从顶端开始垂直地一个接一个地排列，两个盒子之间的垂直的间隙是由它们的 margin 值所决定的。在一个 BFC 中，两个相邻的块级盒子的垂直外边距会产生折叠。 2、在 BFC 中，每一个盒子的左外边缘会触碰到容器的左边缘。 3、浮动元素、绝对定位元素，以及设置了 overflow 属性（除了 visible）的元素不是块级盒子的块容器，因此会为他们的内容创建新的 BFC。</p><p>IFC：行内级格式化上下文。</p><p>1、在 IFC 中，盒子一个接着一个地水平放置。这些盒子会通过不同的方式进行对齐，如底部对齐，顶部对齐，文字基线对齐。 2、矩形区域包含着来自一行的盒子叫做盒行盒（line box）。 3、line box 的宽度由浮动情况和它的包含块决定。line box 的高度由 line-height 计算决定（也就是说，由其内部的块撑开）。</p><h3 id="q-如何清除浮动" tabindex="-1">Q：如何清除浮动？ <a class="header-anchor" href="#q-如何清除浮动" aria-label="Permalink to &quot;Q：如何清除浮动？&quot;">​</a></h3><p>浮动可以理解为让某个 div 元素脱离标准流，漂浮在标准流之上。 一个浮动元素会尽量向左或向右移动，直到它的外边缘碰到包含框或另一个浮动框的边框为止。</p><p>清除浮动可以理解为打破横向排列。清除浮动的关键字是 clear，其取值有以下几种： 1、none，默认值。允许两边都可以有浮动对象 2、left，不允许左边有浮动对象 3、right，不允许右边有浮动对象 4、both，不允许有浮动对象 对于 CSS 的清除浮动(clear)，一定要牢记：这个规则只能影响使用清除的元素本身，不能影响其他元素。</p><h3 id="q-什么是回流-什么是重绘" tabindex="-1">Q：什么是回流？什么是重绘？ <a class="header-anchor" href="#q-什么是回流-什么是重绘" aria-label="Permalink to &quot;Q：什么是回流？什么是重绘？&quot;">​</a></h3><p>当页面中的一部分(或全部)因为元素的规模尺寸，布局，隐藏等改变而需要重新绘制，这就称为回流。每个页面至少需要一次回流，就是在页面第一次加载的时候。</p><p>当页面中的一些元素需要更新属性，而这些属性只是影响元素的外观，风格，而不会影响布局的，比如 background-color。则就叫称为重绘。</p><p>任何对页面中元素的操作都会引起回流或者重绘，比如：</p><p>1、添加、删除元素(回流+重绘) 2、隐藏元素，display:none(回流+重绘)，visibility:hidden(只重绘，不回流) 3、移动元素，比如改变 top,left(重绘+回流)。 4、对 style 的操作(对不同的属性操作，影响不一样)。 5、还有一种是用户的操作，比如改变浏览器大小，改变浏览器的字体大小等(回流+重绘)</p><h3 id="q-如何开启-gpu-加速-其优缺点是什么" tabindex="-1">Q：如何开启 GPU 加速？其优缺点是什么？ <a class="header-anchor" href="#q-如何开启-gpu-加速-其优缺点是什么" aria-label="Permalink to &quot;Q：如何开启 GPU 加速？其优缺点是什么？&quot;">​</a></h3><p>当页面中某个 DOM 元素应用了某些 CSS 规则时就会开启 GPU 加速，如 3D 变换：</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.cube</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -webkit-transform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">translate3d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">250</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">250</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">250</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rotate3d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">250</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">250</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">250</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">-120</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">deg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scale3d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>如果不想对元素用 3D 变换但是还想要开 GPU 加速，就可以：</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.cube</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -webkit-transform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">translateZ</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -moz-transform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">translateZ</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -ms-transform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">translateZ</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -o-transform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">translateZ</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  transform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">translateZ</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>但是，一定要注意：不要随意使用 GPU 加速，如果的确能够显著提高性能，可以尝试使用 GPU 加速。但是另一方面，使用 GPU 可能会导致严重的性能问题，因为它增加了内存的使用，而且它会减少移动端设备的电池寿命。</p>`,31)])])}const o=a(e,[["render",l]]);export{b as __pageData,o as default};
