import{_ as l,c as t,o as i,ag as d,j as a,a as o}from"./chunks/framework.DT5BmYxR.js";const b=JSON.parse('{"title":"Java 基础","description":"","frontmatter":{},"headers":[],"relativePath":"02-programming-languages/Java/java-fundamentals.md","filePath":"02-programming-languages/Java/java-fundamentals.md"}'),c={name:"02-programming-languages/Java/java-fundamentals.md"},r={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},n={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"21.495ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 9501 1000","aria-hidden":"true"};function s(h,e,p,u,k,m){return i(),t("div",null,[e[12]||(e[12]=d("",8)),a("p",null,[e[2]||(e[2]=o("首先和",-1)),e[3]||(e[3]=a("code",null,"hashcode",-1)),e[4]||(e[4]=o("碰撞次数的泊松分布有关，主要是为了寻找一种时间和空间的平衡。在负载因子0.75（HashMap默认）的情况下，单个",-1)),e[5]||(e[5]=a("code",null,"hash",-1)),e[6]||(e[6]=o("槽内元素个数�?的概率小于百万分之一，将7作为一个分水岭，等�?时不做转换，大于等于8才转红黑树，小于等于6才转链表。链表中元素个数�?时的概率已经非常小，再多的就更少了，所以原作者在选择链表元素个数时选择�?，是根据概率统计而选择的。红黑树中的",-1)),e[7]||(e[7]=a("code",null,"TreeNode",-1)),e[8]||(e[8]=o("是链表中的",-1)),e[9]||(e[9]=a("code",null,"Node",-1)),e[10]||(e[10]=o("所占空间的2倍，虽然红黑树的查找效率�?O(logN)",-1)),a("mjx-container",r,[(i(),t("svg",n,[...e[0]||(e[0]=[d("",1)])])),e[1]||(e[1]=a("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("mi",null,"，"),a("mi",{mathvariant:"normal"},"要"),a("mi",{mathvariant:"normal"},"优"),a("mi",{mathvariant:"normal"},"于"),a("mi",{mathvariant:"normal"},"链"),a("mi",{mathvariant:"normal"},"表"),a("mi",null,"�"),a("mo",null,"?"),a("mi",null,"O"),a("mo",{stretchy:"false"},"("),a("mi",null,"N"),a("mo",{stretchy:"false"},")")])],-1))]),e[11]||(e[11]=o("，但是当链表长度比较小的时候，即使全部遍历，时间复杂度也不会太高。所以，要寻找一种时间和空间的平衡，即在链表长度达到一个阈值之后再转换为红黑树",-1))]),e[13]||(e[13]=d("",212))])}const y=l(c,[["render",s]]);export{b as __pageData,y as default};
